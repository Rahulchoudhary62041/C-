#include <iostream>
using namespace std;

// Function to swap two elements
void swap(int &a, int &b) {
  int temp = a;
  a = b;
  b = temp;
}

// Function to perform bubble sort on an array
void bubbleSort(int arr[], int n) {
  // Loop through each element of the array
  for (int i = 0; i < n - 1; i++) {
    // Keep track of whether any swap occurred
    bool swapped = false;
    // Loop through the unsorted part of the array
    for (int j = 0; j < n - i - 1; j++) {
      // Compare two adjacent elements
      // Change > to < to sort in descending order
      if (arr[j] > arr[j + 1]) {
        // Swap them if they are in the wrong order
        swap(arr[j], arr[j + 1]);
        // Set the flag to true
        swapped = true;
      }
    }
    // If no swap occurred, the array is already sorted
    if (!swapped) {
      break;
    }
  }
}

// Function to print an array
void printArray(int arr[], int n) {
  for (int i = 0; i < n; i++) {
    cout << arr[i] << " ";
  }
  cout << endl;
}

// Driver code
int main() {
  // Sample array
  int arr[] = {64, 34, 25, 12, 22, 11, 90};
  // Size of the array
  int n = sizeof(arr) / sizeof(arr[0]);
  // Call the bubble sort function
  bubbleSort(arr, n);
  // Print the sorted array
  cout << "Sorted array: \n";
  printArray(arr, n);
  return 0;
}
